// question no 1:subarraysum

class Solution {
    public int subarraySum(int[] nums) {
        int n=nums.length;
        int count=0;
        for(int i=0;i<n;i++){
            int start=Math.max(0,i-nums[i]);
            for(int j=start;j<=i;j++){
                count+=nums[j];
            }
        }
        return count;
    }
}


// question no 2: sort character by frequency
class Solution {
    public String frequencySort(String s) {
        int n=s.length();
        HashMap<Character,Integer>map=new HashMap<>();
        for(int i=0;i<n;i++){
            char ch=s.charAt(i);
           map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>((a, b) -> b.getValue()-a.getValue());
         pq.addAll(map.entrySet());
         System.out.println(pq);
        StringBuilder sb=new StringBuilder();
    
       while(!pq.isEmpty()){
        Map.Entry<Character,Integer> entry=pq.poll();
            for(int i=0;i<entry.getValue();i++){
                sb.append(entry.getKey());
            }
           
        }
        return sb.toString();
    
    }
}

